apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: airflow
  namespace: staging
  annotations:
    flux.weave.works/automated: "true"
spec:
  interval: 30s
  releaseName: airflow-staging
  chart:
    spec:
      chart: airflow
      version: "1.7.0"
      sourceRef:
        kind: HelmRepository
        name: apache-airflow
        namespace: flux-system
  values:
    defaultAirflowTag: "2.5.1"
    airflowVersion: "2.5.1"
    images:
      airflow:
        repository: "331503217526.dkr.ecr.us-east-1.amazonaws.com/airflow-eks-docker-staging"
        tag: "27dfcd50"
    fernetKey: "zTxhk7FuGqQVPZVoukLn5bGWOrgHzhQnBnaqAItcZGI="
    env:
      - name: "AIRFLOW__KUBERNETES__DAGS_IN_IMAGE"
        value: "True"
      - name: "AIRFLOW__CORE__LOAD_EXAMPLES"
        value: "False"
      - name: "AIRFLOW__KUBERNETES_EXECUTOR__NAMESPACE"
        value: "staging"
      - name: "AIRFLOW__KUBERNETES_EXECUTOR__WORKER_CONTAINER_REPOSITORY"
        value: "apache/airflow"
      - name: "AIRFLOW__KUBERNETES_EXECUTOR__WORKER_CONTAINER_TAG"
        value: "slim-2.5.1-python3.8"
      - name: "AIRFLOW__KUBERNETES__RUN_AS_USER"
        value: "50000"
      - name: "AIRFLOW__CORE__DAGS_FOLDER"
        value: "/opt/airflow/dags/repo"
      - name: "AIRFLOW__WEBSERVER__WEB_SERVER_SSL_CERT"
        value: "opt/airflow/certs/tls.crt"
      - name: "AIRFLOW__WEBSERVER__WEB_SERVER_SSL_KEY"
        value: "opt/airflow/certs/tls.key"
    executor: "KubernetesExecutor"
    createUserJob:
      useHelmHooks: false
    migrateDatabaseJob:
      useHelmHooks: fals
    ingress:
      enabled: true
      web:
        path: "airflow-staging"
    webserver:
      livenessProbe:
        scheme: "HTTPS"
      readinessProbe:
        scheme: "HTTPS"
      extraVolumes:
        - name: "certs"
          secret:
            secretName: "airflow-ssl"
      extraVolumeMounts:
        - name: "certs"
          mountPath: "opt/airflow/certs"
          readOnly: true
    
    